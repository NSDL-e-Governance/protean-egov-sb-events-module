{"version":3,"sources":["ng://@tekdi/ngtek-event-library/lib/event-library.service.ts","ng://@tekdi/ngtek-event-library/lib/event-library.component.ts","ng://@tekdi/ngtek-event-library/lib/events/services/events.service.ts","ng://@tekdi/ngtek-event-library/lib/events/components/event-detail/event-detail.component.ts","ng://@tekdi/ngtek-event-library/lib/events/components/event-list/event-list.component.ts","ng://@tekdi/ngtek-event-library/lib/events/components/event-create/event-create.component.ts","ng://@tekdi/ngtek-event-library/lib/events/events.module.ts","ng://@tekdi/ngtek-event-library/lib/event-library.module.ts"],"names":["EventModuleService","Injectable","args","providedIn","EventModuleComponent","prototype","ngOnInit","Component","selector","template","EventsService","http","this","getEvent","get","getEventFormConfig","HttpClient","EventDetailComponent","eventsService","_router","_this","identifier","configData","console","log","subscribe","data","item","result","err","joinEvent","navigate","Router","Input","EventListComponent","EventCreateComponent","formFieldProperties","fields","postData","formValues","valueChanges","eventData","EventsModule","NgModule","declarations","imports","CommonModule","CommonFormElementsModule","exports","EventLibraryModule","HttpClientModule","MatSliderModule","BrowserAnimationsModule"],"mappings":"+xBAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,wJAHd,GCAAC,EAAA,WAaE,SAAAA,KAKF,OAHEA,EAAAC,UAAAC,SAAA,iCAbDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,mBACVC,SAAU,gGAcZL,EAlBA,GCAAM,EAAA,WAOE,SAAAA,EAAoBC,GAAAC,KAAAD,KAAAA,SAEpBD,EAAAL,UAAAQ,SAAA,WAGE,OAAOD,KAAKD,KAAKG,IAAS,oBAG5BJ,EAAAL,UAAAU,mBAAA,WACE,OAAOH,KAAKD,KAAKG,IAAS,mDAb7Bb,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAHLa,EAAAA,+IADT,GCCA,IAAAC,EAAA,WAcE,SAAAA,EAAoBC,EAAsCC,GAAtCP,KAAAM,cAAAA,EAAsCN,KAAAO,QAAAA,EAsB5D,OAlBEF,EAAAZ,UAAAC,SAAA,WAAA,IAAAc,EAAAR,KACEA,KAAKS,WAAaT,KAAKU,WAAuB,WAC9CC,QAAQC,IAAIZ,KAAKU,WAAuB,YAExCV,KAAKM,cAAcL,WAAWY,WAAS,SAAEC,GACrCN,EAAKO,KAAOD,EAAKA,KAAKE,OAAO,GAC7BL,QAAQC,SACT,SACAK,GACCN,QAAQC,IAAI,SAAUK,OAI5BZ,EAAAZ,UAAAyB,UAAA,WAGElB,KAAKO,QAAQY,SAAS,CAAC,iCA7B1BxB,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,kBACVC,SAAA,49EANOC,SAEAsB,EAAAA,8CAQNC,EAAAA,SAyBHhB,EApCA,GCDA,IAAAiB,EAAA,WASE,SAAAA,KAKF,OAHEA,EAAA7B,UAAAC,SAAA,iCATDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,gBACVC,SAAA,sHAUFyB,EAdA,GCAAC,EAAA,WAYE,SAAAA,EAAoBjB,GAAAN,KAAAM,cAAAA,EAuBtB,OArBEiB,EAAA9B,UAAAC,SAAA,WAAA,IAAAc,EAAAR,KACEA,KAAKM,cAAcH,qBAAqBU,WAAS,SAAEC,GACjDN,EAAKgB,oBAAsBV,EAAKE,OAAa,KAAEF,KAAKW,OACpDd,QAAQC,IAAIE,EAAKE,OAAa,SAC/B,SACAC,GACCN,QAAQC,IAAI,SAAUK,OAI1BM,EAAA9B,UAAAiC,SAAA,WACEf,QAAQC,IAAI,+BAA6BZ,KAAK2B,aAGlDJ,EAAA9B,UAAAmC,aAAA,SAAaC,GACPA,IACFlB,QAAQC,IAAI,mCAAiCiB,GAC7C7B,KAAK2B,WAAaE,wBA5BrBlC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,kBACVC,SAAA,kiCAJOC,KAkCTyB,EAnCA,GCAA,IAAAO,EAAA,WAUA,SAAAA,KAU4B,2BAV3BC,EAAAA,SAAQzC,KAAA,CAAC,CACR0C,aAAc,CAAC3B,EAAsBiB,EAAoBC,GACzDU,QAAS,CACPC,EAAAA,aACAC,EAAAA,0BAEFC,QAAS,CACP/B,EAAsBiB,EAAoBC,OAGlBO,EApB5B,GCAAO,EAAA,WAUA,SAAAA,KAakC,2BAbjCN,EAAAA,SAAQzC,KAAA,CAAC,CACR0C,aAAc,CAAExC,GAChByC,QAAS,CACPH,EACAQ,EAAAA,iBAGAC,EAAAA,gBACAC,EAAAA,yBAEFJ,QAAS,CAACN,EACRS,EAAAA,qBAE8BF,EAvBlC","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventModuleService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sb-event-library',\n  template: `\n    <p>\n      event-library works!\n    </p>\n  `,\n  styles: []\n})\nexport class EventModuleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsService {\n  constructor(private http: HttpClient) { }\n\n  getEvent() {\n    // let _apiUrl = \"https://jticketingdemo.techjoomla.com/index.php?option=com_api&app=users&resource=config&format=raw\";// + identifier;\n    //   return this.http.get<any>(_apiUrl);\n    return this.http.get<any>('assets/api.json');\n  }\n\n  getEventFormConfig(){\n    return this.http.get<any>('assets/api-event-post.json');\n  }\n}\n","import { isNgTemplate } from '@angular/compiler';\nimport { Component, OnInit, Input, IterableDiffers } from '@angular/core';\nimport { EventsService } from '../../services/events.service';\nimport { IEventData } from '../../interfaces/event';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'sb-event-detail',\n  templateUrl: './event-detail.component.html',\n  styleUrls: ['./event-detail.component.css']\n})\nexport class EventDetailComponent implements OnInit {\n  @Input() configData: any;\n  identifier: number;\n   item: any;\n  constructor(private eventsService: EventsService, private _router: Router) {\n\n  }\n\n  ngOnInit() {\n    this.identifier = this.configData['identifier'];\n    console.log(this.configData['identifier']);\n\n    this.eventsService.getEvent().subscribe((data: IEventData.IEvent) => {\n        this.item = data.data.result[0];\n        console.log();\n      },\n      (err: any) => {\n        console.log('err = ', err);\n      });\n  }\n\n  joinEvent()\n  {\n    //alert('hi');\n    this._router.navigate(['/events']);\n  }\n}\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sb-event-list',\n  templateUrl: './event-list.component.html',\n  styleUrls: ['./event-list.component.scss']\n})\nexport class EventListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { EventsService } from '../../services/events.service';\n\n@Component({\n  selector: 'sb-event-create',\n  templateUrl: './event-create.component.html',\n  styleUrls: ['./event-create.component.css']\n})\nexport class EventCreateComponent implements OnInit {\n formFieldProperties: any;\nformValues : any;\n\n  constructor(private eventsService: EventsService) { }\n\n  ngOnInit() {\n    this.eventsService.getEventFormConfig().subscribe((data: any) => {\n      this.formFieldProperties = data.result['form'].data.fields;\n      console.log(data.result['form']);\n    },\n    (err: any) => {\n      console.log('err = ', err);\n    });\n  }\n\n  postData() {\n    console.log('eventData postData------>', this.formValues);\n}\n\nvalueChanges(eventData) {\n  if (eventData) {\n    console.log('eventData valueChanges------>', eventData);\n    this.formValues = eventData;\n  }\n}\n\n}\n ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EventDetailComponent } from './components/event-detail/event-detail.component';\nimport { EventListComponent} from './components/event-list/event-list.component';\nimport { EventCreateComponent } from './components/event-create/event-create.component';\n\nimport { CommonFormElementsModule } from 'common-form-elements';\n\n\n\n@NgModule({\n  declarations: [EventDetailComponent, EventListComponent, EventCreateComponent],\n  imports: [\n    CommonModule,\n    CommonFormElementsModule\n  ],\n  exports: [\n    EventDetailComponent, EventListComponent, EventCreateComponent\n  ]\n})\nexport class EventsModule { }\n","import { NgModule } from '@angular/core';\nimport { EventsModule } from './events/events.module';\nimport { EventModuleComponent} from './event-library.component';\nimport { HttpClientModule } from '@angular/common/http';\n//import { EventLibraryRoutingModule } from './event-library-routing.module';\n\n//import { CommonFormElementsModule } from 'common-form-elements';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [ EventModuleComponent],\n  imports: [\n    EventsModule,\n    HttpClientModule,\n    //CommonFormElementsModule,\n    //EventLibraryRoutingModule,\n    MatSliderModule,\n    BrowserAnimationsModule\n    ],\n  exports: [EventsModule,\n    MatSliderModule]\n})\nexport class EventLibraryModule { }\n"]}